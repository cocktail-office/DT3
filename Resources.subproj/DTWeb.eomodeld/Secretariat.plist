{
    attributes = (
        {
            columnName = "C_STRUCTURE"; 
            externalType = VARCHAR2; 
            name = cStructure; 
            valueClassName = NSString; 
            valueType = S; 
            width = 10; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            definition = "UPPER(toIndividuUlr.nomUsuel)||' '||UPPER(SUBSTR(toIndividuUlr.prenom,1,1))||LOWER(SUBSTR(toIndividuUlr.prenom,2,LENGTH(toIndividuUlr.prenom)))"; 
            externalType = VARCHAR2; 
            name = identite; 
            valueClassName = NSString; 
            valueType = S; 
            width = 120; 
        }, 
        {
            columnName = "NO_INDIVIDU"; 
            externalType = NUMBER; 
            name = noIndividu; 
            precision = 8; 
            valueClassName = NSNumber; 
            valueType = i; 
        }
    ); 
    attributesUsedForLocking = (cStructure, identite, noIndividu); 
    className = "org.cocktail.dt.server.metier.EOSecretariat"; 
    classProperties = (cStructure, identite, noIndividu, toIndividuUlr, toStructureUlr); 
    externalName = "GRHUM.SECRETARIAT"; 
    fetchSpecificationDictionary = {}; 
    internalInfo = {
        "_clientClassPropertyNames" = (cStructure, identite, noIndividu, toIndividuUlr, toStructureUlr); 
        "_nameInObjectStore" = SECRETARIAT; 
    }; 
    name = Secretariat; 
    primaryKeyAttributes = (cStructure, noIndividu); 
    relationships = (
        {
            destination = DTIndividuUlr; 
            internalInfo = {"_nameInObjectStore" = toIndividu; }; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = noIndividu; sourceAttribute = noIndividu; }); 
            name = toIndividuUlr; 
        }, 
        {
            destination = DTStructureUlr; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cStructure; sourceAttribute = cStructure; }); 
            name = toStructureUlr; 
        }
    ); 
}
