{
    attributes = (
        {
            allowsNull = Y; 
            columnName = "C_PAYS_NATIONALITE"; 
            externalType = VARCHAR2; 
            name = cPaysNationalite; 
            valueClassName = NSString; 
            valueType = S; 
            width = 3; 
        }, 
        {
            allowsNull = Y; 
            columnName = "D_NAISSANCE"; 
            externalType = DATE; 
            name = dNaissance; 
            valueClassName = NSCalendarDate; 
            valueType = T; 
        }, 
        {
            allowsNull = Y; 
            columnName = "IND_PHOTO"; 
            externalType = VARCHAR2; 
            name = indPhoto; 
            valueClassName = NSString; 
            valueType = S; 
            width = 1; 
        }, 
        {
            columnName = "NO_INDIVIDU"; 
            externalType = NUMBER; 
            name = noIndividu; 
            precision = 8; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = ""; 
            definition = "nomUsuel||' '||prenom"; 
            externalType = VARCHAR2; 
            name = nomEtPrenom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 120; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NOM_PATRONYMIQUE"; 
            externalType = VARCHAR2; 
            name = nomPatronymique; 
            valueClassName = NSString; 
            valueType = S; 
            width = 80; 
        }, 
        {
            allowsNull = Y; 
            columnName = "NOM_USUEL"; 
            externalType = VARCHAR2; 
            name = nomUsuel; 
            valueClassName = NSString; 
            valueType = S; 
            width = 80; 
        }, 
        {
            columnName = "PERS_ID"; 
            externalType = NUMBER; 
            name = persId; 
            valueClassName = NSNumber; 
            valueType = i; 
        }, 
        {
            allowsNull = Y; 
            columnName = PRENOM; 
            externalType = VARCHAR2; 
            name = prenom; 
            valueClassName = NSString; 
            valueType = S; 
            width = 30; 
        }, 
        {
            allowsNull = Y; 
            columnName = "TEM_VALIDE"; 
            externalType = VARCHAR2; 
            name = temValide; 
            valueClassName = NSString; 
            valueType = S; 
            width = 1; 
        }
    ); 
    attributesUsedForLocking = (
        cPaysNationalite, 
        dNaissance, 
        noIndividu, 
        nomEtPrenom, 
        nomPatronymique, 
        nomUsuel, 
        persId, 
        prenom
    ); 
    className = "org.cocktail.dt.server.metier.EOIndividu"; 
    classProperties = (
        dNaissance, 
        indPhoto, 
        noIndividu, 
        nomEtPrenom, 
        nomPatronymique, 
        nomUsuel, 
        persId, 
        prenom, 
        temValide, 
        "toFwkpers_Pays", 
        tosActivitesResponsables, 
        tosCompte, 
        "tosFwkgrh_Contrat", 
        tosIntervenant, 
        tosPrefDroits, 
        tosRepartBureau, 
        tosRepartStructure, 
        tosTelephone
    ); 
    externalName = "GRHUM.INDIVIDU_ULR"; 
    internalInfo = {
        "_clientClassPropertyNames" = (
            indPhoto, 
            noIndividu, 
            nomEtPrenom, 
            nomPatronymique, 
            nomUsuel, 
            persId, 
            prenom, 
            temValide, 
            tosActivitesResponsables, 
            tosPrefDroits, 
            tosRepartBureau, 
            tosRepartStructure, 
            tosTelephone
        ); 
        "_nameInObjectStore" = "INDIVIDU_ULR@GASPHARP"; 
    }; 
    name = DTIndividuUlr; 
    primaryKeyAttributes = (noIndividu); 
    relationships = (
        {
            destination = "Fwkpers_Pays"; 
            isToMany = N; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = cPays; sourceAttribute = cPaysNationalite; }); 
            name = "toFwkpers_Pays"; 
        }, 
        {
            destination = ActivitesResponsables; 
            isToMany = Y; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = noIndividu; sourceAttribute = noIndividu; }); 
            name = tosActivitesResponsables; 
        }, 
        {
            destination = DTCompte; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = persId; sourceAttribute = persId; }); 
            name = tosCompte; 
        }, 
        {
            destination = "Fwkgrh_Contrat"; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = noDossierPers; sourceAttribute = noIndividu; }); 
            name = "tosFwkgrh_Contrat"; 
        }, 
        {
            destination = Intervenant; 
            isToMany = Y; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = noIndividu; sourceAttribute = noIndividu; }); 
            name = tosIntervenant; 
        }, 
        {
            destination = PrefDroits; 
            isToMany = Y; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = noIndividu; sourceAttribute = noIndividu; }); 
            name = tosPrefDroits; 
        }, 
        {
            destination = RepartBureau; 
            isToMany = Y; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = noIndividu; sourceAttribute = noIndividu; }); 
            name = tosRepartBureau; 
        }, 
        {
            destination = DTRepartStructure; 
            isToMany = Y; 
            joinSemantic = EOLeftOuterJoin; 
            joins = ({destinationAttribute = persId; sourceAttribute = persId; }); 
            name = tosRepartStructure; 
        }, 
        {
            destination = DTPersonneTelephone; 
            internalInfo = {"_nameInObjectStore" = Telephone; }; 
            isToMany = Y; 
            joinSemantic = EOInnerJoin; 
            joins = ({destinationAttribute = persId; sourceAttribute = persId; }); 
            name = tosTelephone; 
        }
    ); 
}
